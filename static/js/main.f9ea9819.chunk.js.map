{"version":3,"sources":["components/Container/Container.jsx","routes.js","redux/auth/authSelectors.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.js","images/default-avatar.jpg","components/UserMenu/UserMenu.js","components/AppBar/AppBar.jsx","components/Loader/Loader.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contactsReducers.js","redux/auth/authReducer.js","redux/store.js","index.js","redux/contacts/contactsActions.js","redux/auth/authOperations.js","components/UserMenu/UserMenu.module.css","components/AppBar/AppBar.module.css","components/Container/Container.module.css","components/Loader/Loader.module.css","redux/auth/authActions.js"],"names":["Container","children","className","styles","container","routes","home","contacts","register","login","isAuthenticated","state","auth","token","getUserName","user","name","connect","authSelectors","getIsAuthenticated","exact","to","activeClassName","AuthNav","getUserEmail","mapDispatchToProps","onLogout","authOperations","logout","email","avatar","defaultAvatar","src","alt","width","button","type","onClick","header","Loader","spinner","color","height","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","onGetCurrentUser","getCurrentUser","useEffect","fallback","path","fetchContactRequest","actions","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","filter","id","action","loading","error","combineReducers","initialUserState","authActions","registerSuccess","loginSuccess","getCurrentUserSuccess","logoutSuccess","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","document","getElementById","createAction","removeContactRequest","removeContactSuccess","removeContactError","axios","defaults","baseURL","headers","common","Authorization","credentials","dispatch","registerRequest","post","then","response","data","catch","message","logOut","logoutRequest","logIn","loginRequest","getState","persistedToken","getCurrentUserRequest","get","module","exports"],"mappings":"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","file":"static/js/main.f9ea9819.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","const routes = {\r\n  home: \"/\",\r\n  contacts: \"/contacts\",\r\n  register: \"/register\",\r\n  login: \"/login\",\r\n};\r\n\r\nexport default routes;\r\n","const isAuthenticated = (state) => state.auth.token;\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport routes from \"../../routes\";\r\nimport authSelectors from \"../../redux/auth/authSelectors\";\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        exact\r\n        to={routes.home}\r\n        className=\"Navlink\"\r\n        activeClassName=\"Navlink--active\"\r\n      >\r\n        Home\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to={routes.contacts}\r\n          className=\"Navlink\"\r\n          activeClassName=\"Navlink--active\"\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import { NavLink } from \"react-router-dom\";\r\nimport routes from \"../../routes\";\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        exact\r\n        to={routes.register}\r\n        className=\"Navlink\"\r\n        activeClassName=\"Navlink--active\"\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to={routes.login}\r\n        className=\"Navlink\"\r\n        activeClassName=\"Navlink--active\"\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.5e42d6f1.jpg\";","import { connect } from \"react-redux\";\r\nimport authSelectors from \"../../redux/auth/authSelectors\";\r\nimport authOperations from \"../../redux/auth/authOperations\";\r\nimport defaultAvatar from \"../../images/default-avatar.jpg\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nconst { getUserEmail } = authSelectors;\r\n\r\nconst UserMenu = ({ email, avatar, onLogout }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <img src={avatar} alt=\"avatar\" width=\"30\" />\r\n      <span className={styles.name}>Welcome, {email}</span>\r\n      <button className={styles.button} type=\"button\" onClick={onLogout}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  email: getUserEmail(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { connect } from \"react-redux\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport styles from \"./AppBar.module.css\";\r\nimport authSelectors from \"../../redux/auth/authSelectors\";\r\n\r\nconst { getIsAuthenticated } = authSelectors;\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import Spinner from \"react-loader-spinner\";\r\nimport styles from \"./Loader.module.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      className={styles.spinner}\r\n      type=\"Oval\"\r\n      color=\"#000\"\r\n      height={40}\r\n      width={40}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../../src/redux/auth/authSelectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport authSelectors from \"../../src/redux/auth/authSelectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","// import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import ContactList from \"./components/ContactList/ContactList\";\n// import Filter from \"./components/Filter/Filter\";\n// import ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\n// import contactsOperations from \"./redux/contacts/contactsOperations\";\n// import contactsSelectors from \"./redux/contacts/contactsSelectors\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport Loader from \"./components/Loader/Loader\";\nimport { useEffect, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport authOperations from \"./redux/auth/authOperations\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomePage = lazy(() =>\n  import(\"./pageViews/HomePage\" /* webpackChunkName: \"home-page\" */)\n);\n\nconst RegisterPage = lazy(() =>\n  import(\"./pageViews/RegisterPage\" /* webpackChunkName: \"register-page\" */)\n);\nconst LoginPage = lazy(() =>\n  import(\"./pageViews/LoginPage\" /* webpackChunkName: \"login-page\" */)\n);\nconst ContactsPage = lazy(() =>\n  import(\"./pageViews/ContactsPage\" /* webpackChunkName: \"contacts-page\" */)\n);\n\nconst App = ({ onGetCurrentUser }) => {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, []);\n\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route exact path={routes.home} component={HomePage} />\n          <PublicRoute\n            path={routes.register}\n            restricted\n            component={RegisterPage}\n            redirectTo={routes.contacts}\n          />\n          <PublicRoute\n            path={routes.login}\n            restricted\n            component={LoginPage}\n            redirectTo={routes.contacts}\n          />\n          <PrivateRoute\n            path={routes.contacts}\n            component={ContactsPage}\n            redirectTo={routes.login}\n          />\n          <Redirect to={routes.home} />\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contactsActions\";\n\n// import errorMessage from \"../../components/Notification/Notification\";\n\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\n// const addContacts = (state, action) => {\n//   const names = state.map((item) => item.name.toLowerCase());\n//   const isNotUniqueContact = names.includes(\n//     action.payload.contact.name.toLowerCase().trim()\n//   );\n\n//   if (isNotUniqueContact) {\n//     errorMessage(action.payload.contact.name);\n//     return state;\n//   } else {\n//     return [...state, action.payload.contact];\n//   }\n// };\n\n// const removeContacts = (state, action) => {\n//   return state.filter(({ id }) => id !== action.payload);\n// };\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst error = createReducer(false, {\n  [addContactRequest]: () => false,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => true,\n  [deleteContactRequest]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => true,\n  [fetchContactRequest]: () => false,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => true,\n});\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./authActions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n// import contactsReducer from \"./contacts/contactsReducers\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport { contacts } from \"./contacts\";\nimport { auth } from \"../redux/auth\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n// const contactsPersistConfig = {\n//   key: \"root\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst store = configureStore({\n  reducer: { auth: persistReducer(authPersistConfig, auth), contacts },\n\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst fetchContactRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactError = createAction(\"contacts/fetchError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/removeError\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  changeFilter,\n};\n","import axios from \"axios\";\r\nimport authActions from \"./authActions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(({ message }) => dispatch(authActions.registerError(message)));\r\n};\r\n\r\nconst logIn = (credentials) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then((response) => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(({ message }) => dispatch(authActions.loginError(message)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(({ message }) => authActions.getCurrentUserError(message));\r\n};\r\n\r\nconst logOut = () => (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(({ message }) => dispatch(authActions.logoutError(message)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1vpgc\",\"name\":\"UserMenu_name__2IYpN\",\"button\":\"UserMenu_button__2RLaF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__TXfFV\",\"box\":\"AppBar_box__3UGIY\",\"appear\":\"AppBar_appear__3I8IQ\",\"appearActive\":\"AppBar_appearActive__3Qt0F\",\"filter-enter\":\"AppBar_filter-enter__3hcsl\",\"filter-enterActive\":\"AppBar_filter-enterActive__rahiK\",\"filter-exit\":\"AppBar_filter-exit__1PQfX\",\"filter-exitActive\":\"AppBar_filter-exitActive__x2ogu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__6vxUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__3wP3q\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n"],"sourceRoot":""}