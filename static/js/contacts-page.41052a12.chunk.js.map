{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contactsOperations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pageViews/ContactsPage.js"],"names":["module","exports","addContact","name","number","dispatch","contactsActions","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","fetchContacts","fetchContactRequest","get","fetchContactSuccess","fetchContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","className","styles","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","type","pattern","onChange","TaskEditor_button","Component","mapDispatchToProps","contactsOperations","connect","onChangeFilter","changeFilter","contacts","filter","filterstyle","inputstyle","items","contact","toLowerCase","includes","onRemove","removeContacts","TaskList","map","TaskList_item","buttonstyle","TaskList_button","onClick","ContactsViews","onFetchContacts","s","box","wrapper","CSSTransition","in","timeout","classNames","unmountOnExit"],"mappings":"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","file":"static/js/contacts-page.41052a12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1Ap_I\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__10Buz\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__39Xnt\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__27hqh\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__1UzRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"Filter_filterstyle__33HAK\",\"inputstyle\":\"Filter_inputstyle__3Pw66\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__3d_63\",\"TaskList_item\":\"ContactList_TaskList_item__2HaU4\",\"completed\":\"ContactList_completed__23jhu\",\"TaskList_text\":\"ContactList_TaskList_text__iBjeA\",\"TaskList_actions\":\"ContactList_TaskList_actions__M7yCQ\",\"TaskList_button\":\"ContactList_TaskList_button__2dAE_\",\"buttonstyle\":\"ContactList_buttonstyle__3RvUZ\"};","import axios from \"axios\";\r\n\r\nimport contactsActions from \"./contactsActions\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(contactsActions.addContactError(error.message)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactsActions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactSuccess(data)))\r\n    .catch((error) =>\r\n      dispatch(contactsActions.fetchContactError(error.message))\r\n    );\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    .catch((error) =>\r\n      dispatch(contactsActions.deleteContactError(error.message))\r\n    );\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  deleteContact,\r\n};\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact(name, number);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className={styles.filterstyle}>\n      Find contacts by name\n      <input\n        className={styles.inputstyle}\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst ContactList = ({ contacts, onRemove }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className={styles.TaskList_item} key={contact.id}>\n        {contact.name + \": \" + contact.number}\n        {\n          <span className={styles.buttonstyle}>\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemove(contact.id)}\n            ></button>\n          </span>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemove: (id) => dispatch(contactsActions.removeContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from \"../components/AppBar/AppBar.module.css\";\r\n\r\nclass ContactsViews extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.box}>\r\n        <div className={s.wrapper}>\r\n          <ContactForm />\r\n\r\n          <CSSTransition\r\n            in={true}\r\n            timeout={250}\r\n            classNames={s.filter}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n        </div>\r\n\r\n        <div>\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   isLoadingTasks: contactsSelectors.getLoading(state),\r\n// });\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsViews);\r\n"],"sourceRoot":""}